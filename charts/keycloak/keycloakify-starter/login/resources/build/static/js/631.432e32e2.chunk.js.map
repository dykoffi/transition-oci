{"version":3,"file":"static/js/631.432e32e2.chunk.js","mappings":"6VAEA,MCQe,SAAeA,GAC1B,IAAQC,EAAcD,EAAdC,WAERC,EAAAA,EAAAA,IAAiB,CACbD,UAAAA,EACA,qBAAuB,WAAvB,8BAAwB,mGAASE,EAAT,EAASA,mBAAT,SACSC,MAGZ,OADDD,EAEOE,EAEAC,GAGrBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IAVK,cACdC,EADc,yBAYbA,GAZa,2CAAxB,mDAAuB,KAgB3B,IAAMC,GAAOC,EAAAA,EAAAA,IAAQ,CACjBX,UAAAA,EAKA,cAAiB,CACb,GAAM,CACF,IAAO,iBAGP,iBAAoB,wBAExB,GAAM,CAEF,IAAO,kBACP,iBAAoB,sCAOhC,OAAa,OAATU,EACO,MAIP,SAAC,MAAD,QACIV,UAAWA,EACXU,KAAMA,IAFV,kBAIWE,EAAAA,IAJX,IAMQ,qBAAwB,yBACxB,qBAAuB,+HACvB,YAAc,GAAd,eAAmBA,EAAAA,GAAAA,aAAnB,CAA8C,8BAM7D,C","sources":["KcApp/index.ts","KcApp/KcApp.tsx"],"sourcesContent":["import KcApp from \"./KcApp\";\r\nexport * from \"./KcApp\";\r\nexport default KcApp;\r\n","import \"./KcApp.css\";\r\nimport type { KcContext } from \"./kcContext\";\r\nimport KcAppBase, { defaultKcProps, useDownloadTerms, useI18n } from \"keycloakify\";\r\nimport tos_en_url from \"./tos_en.md\";\r\nimport tos_fr_url from \"./tos_fr.md\";\r\nimport '../index.css'\r\nexport type Props = {\r\n    kcContext: KcContext;\r\n};\r\n\r\nexport default function KcApp(props: Props) {\r\n    const { kcContext } = props;\r\n\r\n    useDownloadTerms({\r\n        kcContext,\r\n        \"downloadTermMarkdown\": async ({ currentLanguageTag }) => {\r\n            const markdownString = await fetch(\r\n                (() => {\r\n                    switch (currentLanguageTag) {\r\n                        case \"fr\":\r\n                            return tos_fr_url;\r\n                        default:\r\n                            return tos_en_url;\r\n                    }\r\n                })(),\r\n            ).then(response => response.text());\r\n\r\n            return markdownString;\r\n        },\r\n    });\r\n\r\n    const i18n = useI18n({\r\n        kcContext,\r\n        // NOTE: Here you can override the default i18n messages\r\n        // or define new ones that, for example, you would have\r\n        // defined in the Keycloak admin UI for UserProfile\r\n        // https://user-images.githubusercontent.com/6702424/182050652-522b6fe6-8ee5-49df-aca3-dba2d33f24a5.png\r\n        \"extraMessages\": {\r\n            \"en\": {\r\n                \"foo\": \"foo in English\",\r\n                // Here we overwrite the default english value for the message \"doForgotPassword\" \r\n                // that is \"Forgot Password?\" see: https://github.com/InseeFrLab/keycloakify/blob/f0ae5ea908e0aa42391af323b6d5e2fd371af851/src/lib/i18n/generated_messages/18.0.1/login/en.ts#L17\r\n                \"doForgotPassword\": \"I forgot my password\"\r\n            },\r\n            \"fr\": {\r\n                /* spell-checker: disable */\r\n                \"foo\": \"foo en Francais\",\r\n                \"doForgotPassword\": \"J'ai oubli√© mon mot de passe\"\r\n                /* spell-checker: enable */\r\n            },\r\n        },\r\n    });\r\n\r\n    //NOTE: Locale not yet downloaded\r\n    if (i18n === null) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <KcAppBase\r\n            kcContext={kcContext}\r\n            i18n={i18n}\r\n            {...{\r\n                ...defaultKcProps,\r\n                // NOTE: The classes are defined in ./KcApp.css\r\n                \"kcHeaderWrapperClass\": \"text-green-600 my-font\",\r\n                \"kcButtonPrimaryClass\":\"mt-12 md:mt-16 bg-[#FF6602] hover:bg-orange-600 text-white font-bold font-heading py-5 px-8 rounded-md uppercase text-center\",\r\n                \"kcHtmlClass\": [...defaultKcProps.kcHtmlClass,\"bg-orange-100 h-screen\"]\r\n            }}\r\n            //Uncomment the following line if you want to prevent the default .css to be downloaded\r\n            //doFetchDefaultThemeResources={false} \r\n        />\r\n    );\r\n}\r\n"],"names":["props","kcContext","useDownloadTerms","currentLanguageTag","fetch","tos_fr_url","tos_en_url","then","response","text","markdownString","i18n","useI18n","defaultKcProps"],"sourceRoot":""}